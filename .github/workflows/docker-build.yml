name: Construir e enviar imagem do Docker do frontend

on:
  push:
    branches:
      - development
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Código de check-out
        uses: actions/checkout@v4

      - name: Configurar o Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extrair metadados
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/angular-lab-web
          tags: |
            type=raw,value=latest,enable=${{ github.ref_name == 'master' }}
            type=raw,value=development,enable=${{ github.ref_name == 'development' }}

      - name: Cria e envia a imagem do Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/angular-lab-web:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/angular-lab-web:buildcache,mode=max

      - name: Deploy no EC2 via Docker Compose
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ec2-18-228-117-75.sa-east-1.compute.amazonaws.com
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/lab-web-infraestrutura
            
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/angular-lab-web:latest
            
            docker compose up -d --no-deps --force-recreate frontend
            
            echo "Aguardando o frontend ficar saudável..."
            timeout 60 bash -c 'until docker compose ps frontend | grep -q "healthy"; do sleep 2; done' || echo "Timeout esperando healthcheck"
            
            docker compose restart nginx
            
            docker image prune -af
            
            echo "=== Status dos containers ==="
            docker compose ps
